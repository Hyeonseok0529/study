// 2025_06_01 일요일

오늘은 display 속성에 대해 복습해보자.

display
css에서 가장 핵심적인 속성 중 하나로, HTML 요소가 웹 페이지에서 어떻게 배치되고, 상호작용하는지 결정하는데 사용된다. display는 요소의 박스 모델 동작 방식을 정의하는데에 사용되며, block, inline, inline-block, none, flex, grid 등의 주요 값들이 있다.

값들을 살펴보자
display: block;  블록요소처럼 작동하고, 줄바꿈이 발생한다.
display: inline; 인라인 요소처럼 작동하고, 줄바꿈이 발생하지 않는다.
display: inline-block; 인라인처럼 흐르지만, 크기 지정이 가능하다.
display: none; 요소를 숨긴다.(화면에 표시되지 않는다.)
// 비슷한 속성으로 visibility:hidden이 있다. 요소 자체를 사라지게 해서 
공간도 없어지게하는 display:none, 요소가 보이지는 않지만 공간을 차지하게 하는
visibility:hidden의 차이를 알아두도록 하자.

display: flex; 부모 요소를 Flex Container로 만들어 자식 요소를 정렬한다.
display: inline-flex; flex와 동일하지만, 인라인처럼 흐름을 유지한다.
display: grid; 부모 요소를 Grid Container로 만들어 자식 요소를 격자로 정렬한다.
display: inline-grid; grid와 같지만 인라인처럼 흐름을 유지한다.
display: table; 요소를 표처럼 작동하게 한다.
추가로 HTML의 각 태그는 기본적으로 display 값을 가지고 있어 참고하도록 하자. 예시는 아래와 같다.

<div>: block
<span>: inline
<li>: list-item
<table>: table
<img>: inline-block
자주 쓰이는 값들
display: none = 메뉴 숨기기, 팝업 닫기
display: flex = 요소들을 정렬할 때, 카드형 레이아웃을 사용할 때 쓰인다.
display: inline-block = 텍스트 옆에 이미지 등을 배치할 때
@media 쿼리 안에서 display를 변경할 때

어떤 걸 써야 할지 헷갈릴 때
줄 바꿈을 원할때는 block,
줄 바꿈 없이 내용을 흐르게 하려면 inline,
줄 바꿈 없이, 너비와 높이를 지정하고 싶을 땐 inline-block,
자식 요소를 정렬하려면 flex또는 grid를 사용하면 된다.
왜 알아야 할까?
프로젝트를 진행하다보면 CSS를 작성하면서 다음과 같은 장애를 부딪힌 적이 있다.
“왜 이 요소가 옆에 안 가지?”
“왜 여백이 이렇게 깨지지?”
“왜 이 요소가 보이지 않지?”
“왜 높이가 안 먹지?”
이럴때는 대부분 display를 잘못 작성했거나 기본값에 대한 이해가 없어서 발생했던 적이 많았다. 이렇게 display는 레이아웃의 핵심 개념이기 때문에 꼭 알고 있어야 한다.
또한 같은 HTML이라도 display에 따라 전혀 다른 UI가 되기 때문에 해당 속성을 잘 알아야 한다. 반응형 디자인에서 특정 요소를 숨기거나, 버튼 내부의 텍스트와 아이콘을 정렬한다거나, 배너나 카드현 UI를 정렬할 때 각 상황에서 알맞는 display 선택이 필요하다.