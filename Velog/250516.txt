// 2025_05_16 금요일

오늘은 REST API에 대해 알아보자.

1. REST(Representational State Transfer) API
서버와 클라이언트가 인터넷을통해 데이터를 주고받을 때 규칙과 방식을 정해놓은 것이 REST 이며, 이 방식을 따라 만들어진 API(Application Programming Interface)를 REST API라고 부른다. REST에 대해 조금 더 알아보자.

2. REST
REST 는 2000년에 로이 필딩(Roy Fielding)에 의해 제안된 웹 서비스 설계 원칙이다.

1) 자원(Resource)
인터넷 상에서 다루는 모든 데이터(사용자 정보,게시글,사진 등)는 자원이라고 부르는데, REST에서는 자원을 고유한 URL(주소)로 표현한다.

2) HTTP 메서드 활용
REST는 HTTP 프로토콜의 메서드를 자원에 대해 어떻게 행동할지 표현하는 데에 사용한다.

GET : 자원 조회
POST : 자원 생성
PUT : 자원 전체 수정
PATCH :자원 일부 수정
DELETE : 자원 삭제
3) 무상태성(Stateless)
서버는 클라이언트의 상태를 저장하지 않는다. 그래서 클라이언트가 요청할 때마다 필요한 모든 정보를 보내야 한다.

4) 표현 방식(Representation)
서버가 자원의 상태를 JSON, XML 등의 형식으로 클라이언트에게 전달한다.

3. REST API의 기능
클라이언트(웹, 앱 등)가 서버에 특정 URL로 요청을 보내서 원하는 데이터를 받거나 수정할 수 있다.

- 사용자 목록을 가져오고 싶을 때 
GET https://example.com/users

- 새로운 사용자를 추가하고 싶을 때
POST https://example.com/users + 사용자 정보(json)

- 특정 사용자를 수정하고 싶을 때
PUT https://example.com/users/123 + 수정할 정보(json)

- 특정 사용자를 삭제하고 싶을 때 
DELETE https://example.com/users/123
4. 장점
표준화된 구조이기 때문에 배우기 쉽고, 유지보수가 편리하다. 또한 다양한 클라이언트에서 쉽게 사용할 수 있으며 HTTP 프로토콜을 그대로 사용하기 때문에 인터넷 어디서든 요청이 가능하다.

정리
REST API는 서버(백엔드)와 클라이언트(웹, 앱 등) 사이의 소통방식이다. 그래서 백엔드가 이미 있는 서비스의 인터페이스라고 할 수 있다. REST API를 사용하기 위해서는 백엔드 서버가 반드시 있어야 한다는 것이다.
하지만 지금 상황에서 REST API를 어떻게든 사용해보려면 백엔드 없이 서비스를 만드는 방법도 생각을 해봐야할 것 같다. 요즘에는 서버리스 (Serverless)나 BaaS(Backend as a Service)라는 서비스가 있다고 한다. 지금 하는 프로젝트가 끝나면 REST API를 꼭 이용해보고 싶다.