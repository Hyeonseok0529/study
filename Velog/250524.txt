// 2025_05_24 토요일

오늘은 HTTP,HTTPS 에 이어서 TCP와 UDP에 대해 정리해보려고 한다. TCP와 UDP는 정보처리기사에서 매우 중요하게 언급되는 개념이며, OSI 7계층중에 전송계층에 속한다.

TCP와 UDP
이 두개의 단어는 인터넷에서 데이터를 주고받을 때 어떻게 보낼지를 정하는 방식(전송 프로토콜)이다.

TCP(Transmission Control Protocol)
정확하고 안전하게 전송하는 방식의 프로토콜이다. 전송 성공 여부를 확인할 수 있으며, 데이터가 빠짐없이 도착하게 한다. 느리지만 신뢰성은 높은 프로토콜이다. 웹 페이지 접속(HTTP, HTTPS), 파일 다운로드, 이메일(SMTP, IMAP), 메시지 앱 등에서 쓰인다.

UDP(User Datagram Protocol)
빠르지만 정확도는 신경쓰지 않는 프로토콜이다. 데이터 전송 성공 여부와 상관없이 데이터를 던진다. 빠르지만, 중간에 손실될 수 잇으며 순서또한 보장되지 않는다. UDP는 실시간 게임, 화상통화나 음성통화, 방송 스트리밍과 같은 끊김보다 속도가 중요할 때 쓰인다.

TCP가 신뢰성을 보장하는 방법
1) 3-way 핸드셰이크 연결 설정 : 데이터를 주고받기 전에 서로 연결이 잘 됐는지 확인하며, 클라이언트와 서버가 3번의 메시지를 주고받아야 통신이 시작된다.

클라이언트 : 준비 되셨음? (SYN)
서버: Yeah (SYN + ACK)
클라이언트 : ㅇㅋ (ACK)
2) 데이터 번호 붙이기 (Sequence Number)
데이터를 보낼 때 순서 번호를 붙인다. 수신자는 이 번호를 보고 순서대로 정렬하게 된다.

보낸 데이터: [1번 조각] [2번 조각] [3번 조각]
받은 데이터: [2번] [1번] [3번] → 순서 정리
3) 수신 확인 응답(ACK)
데이터를 잘 받으면 응답(Acknowledgment)을 돌려준다. 응답이 없는 경우 재전송을 하게된다.

4) 재전송(Retransmission)
일정 시간 안에 ACK가 오지 않는 경우 손실된 것으로 판단하고 다시 보낸다.

5) 흐름 제어(Flow Control)
수신자가 처리할 수 있는 속도보다 너무 빨리 보내지 않도록 조절하는 방법이다. 윈도우 크기(window size)를 이용해 수신자가 요청하는 만큼 전송하게 된다.

3-Way-Handshake, 4-Way-Handshake
이 두개의 가장 큰 차이점은 전자는 연결을 설정할 때, 후자는 연결을 종료할 때 사용되는 것이다. 4-Way-Handshake는 TCP 연결을 끊기 위한 4단계 과정을 말하는데,

클라이언트 -> 서버 : 이제 그만 보낼거임(FIN)
서버 -> 클라이언트 : ㅇㅋ(ACK) 잠만 ㄱㄷ 아직 보낼 거 남음
서버 -> 클라이언트 : ㅇㅋ 이제 끝남(FIN)
클라이언트 -> 서버 : ㅇㅋ ㅂㅂ(ACK)
이렇게 FIN, ACK의 키워드를 사용해서 양쪽에서 FIN을 보내는 것이 4-Way-Handshake이다. 데이터를 주고받던 쌍방이 각자 따로 종료 요청을 해야하기 떄문에 4단계로 이루어진다.